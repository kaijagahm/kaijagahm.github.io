{
  "hash": "a93a0908ee6dc31745a946d45f05a7e1",
  "result": {
    "markdown": "---\ntitle: \"The %notin% operator\"\ndescription: |\n  Why is negating `%in%` such a pain?\nauthor:\n  - name: Kaija Gahm\n    url: {}\ndate: 07-08-2018\noutput:\n  distill::distill_article:\n    self_contained: false\n    highlight: kate\n---\n\n\n\n\n*This post has been slightly modified from its original form on [woodpeckR](https://thewoodpeckr.wordpress.com/2018/07/08/notin/).*\n\n### Problem\n\nI keep forgetting how to select all elements of an object *except* a few, by name. I get the `!` operator confused with the `-` operator, and I find both of them less than intuitive to use. How can I negate the `%in%` operator?\n\n### Context\n\nI have a data frame called `electrofishing` that contains observations from a fish sampling survey. One column, `stratum`, gives the aquatic habitat type of the sampling site. I'd like to exclude observations sampled in the \"Tailwater Zone\" or \"Impounded-Offshore\" aquatic habitats.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelectrofishing <- data.frame(stratum = c(\"Tailwater Zone\", \"Tailwater Zone\", \"Impounded\", \"Main Channel Border\", \"Side Channel\", \"Impounded-Offshore\", \"Side Channel\"), \n                             idx = 1:7)\n\nelectrofishing\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              stratum idx\n1      Tailwater Zone   1\n2      Tailwater Zone   2\n3           Impounded   3\n4 Main Channel Border   4\n5        Side Channel   5\n6  Impounded-Offshore   6\n7        Side Channel   7\n```\n:::\n:::\n\n\nMy instinct would be to do this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelectrofishing <- electrofishing[electrofishing$stratum !%in% \n                                   c(\"Tailwater Zone\", \"Impounded-Offshore\"),]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: <text>:1:57: unexpected '!'\n1: electrofishing <- electrofishing[electrofishing$stratum !\n                                                            ^\n```\n:::\n:::\n\n\nBut that doesn't work. You can't negate the `%in%` operator directly. Instead, you have to wrap the `%in%` statement in parentheses and negate the entire statement, returning the opposite of the original boolean vector:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelectrofishing <- electrofishing[!(electrofishing$stratum %in% \n                                     c(\"Tailwater Zone\", \"Impounded-Offshore\")),]\n```\n:::\n\n\n\nI'm not saying this doesn't make sense, but I can never remember it. My English-speaking brain would much rather say \"rows whose stratum is **not** included in c(\"Tailwater Zone\", \"Impounded-Offshore\")\" than \"**not** rows whose stratum is included in c(\"Tailwater Zone\", \"Impounded-Offshore\")\".\n\n### Solution\n\nLuckily, it's pretty easy to negate `%in%` and create a `%notin%` operator. I credit this answer to user \"catastrophic-failure\" on [this](https://stackoverflow.com/questions/38351820/negation-of-in-in-r) Stack Overflow question.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n`%notin%` <- Negate(`%in%`)\n```\n:::\n\n\nI didn't even know that the `Negate` function existed. The more you know.\n\n### Outcome\n\nI know there are lots of ways to negate selections in R. `dplyr` has `select()` and `filter()` functions that are easier to use with `-c()`. Or I could just learn to throw a `!` in front of my `%in%` statements. But `%notin%` seems a little more intuitive.\n\nNow it's straightforward to select these rows from my data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelectrofishing <- electrofishing[electrofishing$stratum %notin% \n                                   c(\"Tailwater Zone\", \"Impounded-Offshore\"),]\n```\n:::\n\n\n### Resources\n\n[https://stackoverflow.com/questions/38351820/negation-of-in-in-r](https://stackoverflow.com/questions/38351820/negation-of-in-in-r)\n\n[This one](http://r.789695.n4.nabble.com/in-operator-NOT-IN-td3506655.html) does a good job of explaining why `!%in%` doesn't work.\n",
    "supporting": [
      "the-notin-operator_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}